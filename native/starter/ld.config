 # Start of memory section
FEATURES {
    STARTADDRESS: default = $c000;
}
SYMBOLS {
    __STACKSIZE__:  type = weak, value = $0800; # 2k stack
    __STACKSTART__: type = weak, value = $1000;
    __ZPSTART__:    type = weak, value = $0080;
}
MEMORY
{
    ROM1: file = %O, start $1000, size $1FFF;
    ZP: file = "", start $0000, size $0080;
    RAM: file = "", start $2000, size $6FFF;
     
}

SEGMENTS {
        ZEROPAGE:   load = ZP, type = rw;
        STARTUP:  load = ROM1, type = ro,  optional = yes;
        CODE:   load = ROM1, type = ro;
        RODATA: load = ROM1, type = ro;
        ONCE:     load = ROM1, type = ro,  optional = yes;

        DATA:   load = RAM, type = rw;
        BSS:    load = RAM, type = bss, define = yes;
}


FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}